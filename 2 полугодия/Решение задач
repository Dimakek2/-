№1
1)найти точки, через которые проходят пути между точками
2)найти все возможные варианты путей и посчитать их потери
3)сложить ответы

№2
1)Сгенерировать все возможные встречи. много вложенных циклов
2)Проверить логическую характеристику состояния, проверить ее на лож.

for x in range(2):
    for y in range(2):
        for w in range(2):
            for z in range(2):
                f = (not(y <= x) or (z <= w) or not z)
                print([x, y, w, z] if not f else '')

№3
1)применять фильтры по нужным значениям
2)посчитать и умножить(при необходимости) на нужное количество

№4
1)посмотреть, сколько раз встречается каждая буква
2)на основе данных, условия для букв, повторяющиеся предельные значения, код с использованием валюты
3)далее по бинарному дереву выстроить значения для других букв

№5
1)организовать цикл пребора с нуля до сичла в условии задачи
2)Перевод в двоичную систему b = bin(b)[2:] b = f'{N;b}'
3) Записываем и зменяем 
4) перводим число в десятичную
for N in range(516):
    b = f'{N:b}'
    if N % 2 ==0:
        b+= "10"
    else:
        b = "1" + b + "01"
    if int(b, 2)>516:
        print(N)
        break
№6
1)вспомнить команды черепахи
2)нарисовать по алгоритму
3) поднять перо нарисовтаь точки
4)Посчитать точки в фигуре

№7
1)Формула формулы для потребления необходимая величина
2)написать формулу для случая "до" и "после"
3)определить изменение данной велимчины и получить то, что требуется

№8
1)Генерируем все возможные варианты
2)проверка строчки на условие
3)Выводим счетчик занчений

from itertools import product
nums=product('01234567',repeat=5)
k=0
n='16 36 56 76 61 63 65 67'
nn=n.split()
for n in nums:
    numb=''.join(n)
    sp=[]
    if numb.count('6')==1 and numb[0]!='0':
        for x in nn:
            if x in numb:
                sp.append(x)
        if not sp: 
            k+=1
print(k)

№9
1)обозначить выполнение 1 условия
2)обозначить остальные условия на основе 1-го
3)по сравнению с сопоставимыми обоими условиями клетки

№10
1)Ctrl + F в параметрах ставим галочки "учитывать регистр" + "только слово инфекции"
2)количество результатов будет отображаться
№13
1)Накопительно нумеруем вершины графа, стоя с 1.
2)Суммируем все значения или умножаем.
3)Выводим счетчик занчений.
№14
a='0123456789abcde'
for x in a:
    f=int(f'123{x}5',15)+int(f'1{x}233',15)
    if  f%14 ==0:
        print(f//14)
        break
 №15
 for a in range(1,1000):
    if all(((x%2==0) <= (x%3!=0)) or (x+a>=100) for x in range(1,100)):
        print(a)
        break
№17
def f17():
    with open('17.txt') as f:
        a=[int(x) for x in f]
    mn=min(x for x in a if x % 17==0)
    maxi = -10
    count = 0
    for i in range(len(a)-1):
        if a[i]%mn ==0 or a[i+1]%mn == 0:
            sum = a[i+1]+a[i]
            count +=1
            if maxi < sum:
                maxi = sum
    print(maxi,count)
f17()
№19-21
1)рапсисать через простоц граф
2)найти минимальное значение
3)расматриваем позицию после первого хода и откидываем лишнее варианты
4) расписываем максимальное и минимальное действия
5)расписываем ходы опонентов
№23
1)С помощью функции продакт создаем обЪект
2)Возращаем стартовое знаечение в исходное состояние
3)Используем команду итерацию для пропуска не подходящих команд
4)Заходим в программу и ананлизируем команды
def f(x,y):

    if x>y or x==17:
        return 0
    elif x==y:
        return 1
    return f(x+1,y) +f(x*2,y)
print(f(1,10)*f(10,35))

№26
1)ввести данные в libreoffice calc или в excel
2)добавление фильтра по убыванию на столбец с данными
3)для избавления от дублей есть формула =если($a2-$a3=0;0;a3)
4)формулу столбца с этой формулой и вставить как число
5)фильтровать по убыванию и общедоступным
6)перевод ту(напротив второго значения первое минус второе)
7)после ты дель в следующем столбце ограниченное накопление дельты с условием, что оно исключает определенные числа(пример: =ЕСЛИ(D3+C4 >= 3;0;D3+C4))
8)меньшее количество нулей и прибавляем единицу учета для всех коробок
9)идущий вниз список и искомое представление из данных по условию
